// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id       Int    @id @default(autoincrement())
  name     String
  lastName String
  email    String @unique

  companies company[]
}

model client {
  id             Int     @id @default(autoincrement())
  name           String
  company_id     Int
  identification String  @unique
  email          String? @unique
  sales          sale[]
  company        company @relation(fields: [company_id], references: [id])
}

model company {
  id         Int       @id @default(autoincrement())
  name       String
  owner_id   Int
  created_at DateTime  @default(now())
  field_id   Int
  active     Boolean   @default(true)
  field      field     @relation(fields: [field_id], references: [id])
  owner      user      @relation(fields: [owner_id], references: [id])
  product    product[]
  client     client[]
}

model field {
  id        Int       @id @default(autoincrement())
  name      String
  companies company[]
}

model sale {
  id         Int      @id @default(autoincrement())
  date       DateTime @default(now())
  amount     Int
  total      Float
  product_id Int
  product    product  @relation(fields: [product_id], references: [id])
  client_id  Int
  client     client   @relation(fields: [client_id], references: [id])
}

model product {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  price       Float
  company_id  Int
  company     company         @relation(fields: [company_id], references: [id])
  sales       sale[]
  stocks      product_stock[]
}

model stock {
  id              Int             @id @default(autoincrement())
  amount          Int
  previous_amount Int
  product_stock   product_stock[]
}

model product_stock {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  active     Boolean  @default(true)
  product_id Int
  stock_id   Int
  product    product  @relation(fields: [product_id], references: [id])
  stock      stock    @relation(fields: [stock_id], references: [id])
}

model invoice {
  id       Int    @id @default(autoincrement())
  sale_id  Int
  filePath String
}
